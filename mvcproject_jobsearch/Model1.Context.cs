//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mvcproject_jobsearch
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MVC_ProjectDBEntities : DbContext
    {
        public MVC_ProjectDBEntities()
            : base("name=MVC_ProjectDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Comp_Reg_Table> Comp_Reg_Table { get; set; }
        public virtual DbSet<CompJobVacc_Tab> CompJobVacc_Tab { get; set; }
        public virtual DbSet<Login_table> Login_table { get; set; }
        public virtual DbSet<User_App_table> User_App_table { get; set; }
        public virtual DbSet<User_Reg_Tab> User_Reg_Tab { get; set; }
    
        public virtual ObjectResult<Nullable<int>> sp_countID(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_countID", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_loginid(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_loginid", unaParameter, pwdParameter);
        }
    
        public virtual int sp_logininsert(Nullable<int> rid, string una, string pwd, string logtype)
        {
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var logtypeParameter = logtype != null ?
                new ObjectParameter("logtype", logtype) :
                new ObjectParameter("logtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_logininsert", ridParameter, unaParameter, pwdParameter, logtypeParameter);
        }
    
        public virtual ObjectResult<string> sp_logintype(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_logintype", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_maxidlogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_maxidlogin");
        }
    
        public virtual int sp_User_reg(Nullable<int> uid, string na, Nullable<int> age, string addr, string email, string ph, string loc, string gen, string qual, string skil, string exp, string pho)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phParameter = ph != null ?
                new ObjectParameter("ph", ph) :
                new ObjectParameter("ph", typeof(string));
    
            var locParameter = loc != null ?
                new ObjectParameter("loc", loc) :
                new ObjectParameter("loc", typeof(string));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            var qualParameter = qual != null ?
                new ObjectParameter("qual", qual) :
                new ObjectParameter("qual", typeof(string));
    
            var skilParameter = skil != null ?
                new ObjectParameter("skil", skil) :
                new ObjectParameter("skil", typeof(string));
    
            var expParameter = exp != null ?
                new ObjectParameter("exp", exp) :
                new ObjectParameter("exp", typeof(string));
    
            var phoParameter = pho != null ?
                new ObjectParameter("pho", pho) :
                new ObjectParameter("pho", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_reg", uidParameter, naParameter, ageParameter, addrParameter, emailParameter, phParameter, locParameter, genParameter, qualParameter, skilParameter, expParameter, phoParameter);
        }
    
        public virtual int sp_InsertCompany(Nullable<int> comId, string name, string email, string phone, string location, string website)
        {
            var comIdParameter = comId.HasValue ?
                new ObjectParameter("comId", comId) :
                new ObjectParameter("comId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertCompany", comIdParameter, nameParameter, emailParameter, phoneParameter, locationParameter, websiteParameter);
        }
    
        public virtual int sp_comInsert(Nullable<int> comId, string name, string email, string phone, string location, string website)
        {
            var comIdParameter = comId.HasValue ?
                new ObjectParameter("comId", comId) :
                new ObjectParameter("comId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_comInsert", comIdParameter, nameParameter, emailParameter, phoneParameter, locationParameter, websiteParameter);
        }
    
        public virtual int sp_Vaccancy(Nullable<int> comId, string jobtit, string jobdes, string skills, string expe, string loc, string salran, string jobtype, Nullable<System.DateTime> postdate, Nullable<System.DateTime> lastdate, string sts)
        {
            var comIdParameter = comId.HasValue ?
                new ObjectParameter("comId", comId) :
                new ObjectParameter("comId", typeof(int));
    
            var jobtitParameter = jobtit != null ?
                new ObjectParameter("jobtit", jobtit) :
                new ObjectParameter("jobtit", typeof(string));
    
            var jobdesParameter = jobdes != null ?
                new ObjectParameter("jobdes", jobdes) :
                new ObjectParameter("jobdes", typeof(string));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var expeParameter = expe != null ?
                new ObjectParameter("expe", expe) :
                new ObjectParameter("expe", typeof(string));
    
            var locParameter = loc != null ?
                new ObjectParameter("loc", loc) :
                new ObjectParameter("loc", typeof(string));
    
            var salranParameter = salran != null ?
                new ObjectParameter("salran", salran) :
                new ObjectParameter("salran", typeof(string));
    
            var jobtypeParameter = jobtype != null ?
                new ObjectParameter("jobtype", jobtype) :
                new ObjectParameter("jobtype", typeof(string));
    
            var postdateParameter = postdate.HasValue ?
                new ObjectParameter("postdate", postdate) :
                new ObjectParameter("postdate", typeof(System.DateTime));
    
            var lastdateParameter = lastdate.HasValue ?
                new ObjectParameter("lastdate", lastdate) :
                new ObjectParameter("lastdate", typeof(System.DateTime));
    
            var stsParameter = sts != null ?
                new ObjectParameter("sts", sts) :
                new ObjectParameter("sts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vaccancy", comIdParameter, jobtitParameter, jobdesParameter, skillsParameter, expeParameter, locParameter, salranParameter, jobtypeParameter, postdateParameter, lastdateParameter, stsParameter);
        }
    
        public virtual int sp_jobsearch(string qry)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobsearch", qryParameter);
        }
    
        public virtual int sp_userapplication(Nullable<int> jobid, Nullable<int> uid, Nullable<System.DateTime> appldate, string resume, string sts)
        {
            var jobidParameter = jobid.HasValue ?
                new ObjectParameter("jobid", jobid) :
                new ObjectParameter("jobid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var appldateParameter = appldate.HasValue ?
                new ObjectParameter("appldate", appldate) :
                new ObjectParameter("appldate", typeof(System.DateTime));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("resume", resume) :
                new ObjectParameter("resume", typeof(string));
    
            var stsParameter = sts != null ?
                new ObjectParameter("sts", sts) :
                new ObjectParameter("sts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_userapplication", jobidParameter, uidParameter, appldateParameter, resumeParameter, stsParameter);
        }
    }
}
